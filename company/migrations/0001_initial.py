# Generated by Django 3.0.3 on 2020-02-26 06:43

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('patronymic', models.CharField(max_length=100, verbose_name='Отчество')),
                ('birth_date', models.DateField(verbose_name='Дата рождения')),
                ('birth_place', models.CharField(max_length=250)),
                ('sex', models.CharField(choices=[('m', 'Мужской'), ('f', 'Женский')], max_length=1)),
                ('department', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('attitude_to_conscription', models.CharField(choices=[('pos', 'Позитивное'), ('neu', 'Нейтральное'), ('neg', 'Негати вное')], default='neu', max_length=3)),
                ('marital_status', models.CharField(choices=[('y', 'Женат/Замужем'), ('n', 'Не женат/не замужем')], max_length=1)),
                ('passport_series', models.CharField(max_length=4, validators=[django.core.validators.RegexValidator(code='nomatch', message='Серия паспорта - число из 4 цифр', regex='^\\d{4}$')])),
                ('passport_ID', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator(code='nomatch', message='Номер паспорта - число из 6 цифр', regex='^\\d{6}$')])),
                ('address', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('award_date', models.DateField()),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reward', to='company.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax', models.FloatField()),
                ('salary', models.FloatField(validators=[django.core.validators.MinValueValidator(limit_value=0, message='Оклад не меньше 0')])),
                ('percent', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MaxValueValidator(limit_value=1, message='Максимальное значение 1'), django.core.validators.MinValueValidator(limit_value=0, message='Минимальное значение 0')])),
                ('premium', models.FloatField(validators=[django.core.validators.MinValueValidator(limit_value=0, message='Премия не меньше 0')])),
                ('income_date', models.DateField(default='2019-12-12')),
                ('employee', models.ManyToManyField(related_name='income', to='company.Employee')),
            ],
            managers=[
                ('total', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edu_inst_name', models.CharField(max_length=200)),
                ('edu_inst_address', models.CharField(max_length=200)),
                ('edu_type', models.CharField(choices=[('pt', 'Заочная'), ('ft', 'Очная')], default='neu', max_length=3)),
                ('admission_year', models.IntegerField(validators=[django.core.validators.MaxValueValidator(limit_value=2020, message='Дата поступления не может быть в будущем'), django.core.validators.MinValueValidator(limit_value=1900, message='Минимальная дата поступления - 1900 год')])),
                ('graduate_year', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(limit_value=2020, message='Дата окончания не может быть в будущем'), django.core.validators.MinValueValidator(limit_value=1900, message='Минимальная дата окончания - 1900 год')])),
                ('speciality_name', models.CharField(blank=True, max_length=100)),
                ('diploma_num', models.CharField(blank=True, max_length=25, unique=True)),
                ('degree', models.CharField(blank=True, max_length=100)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education', to='company.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('patronymic', models.CharField(max_length=100)),
                ('birth_date', models.DateField()),
                ('employee', models.ManyToManyField(related_name='children', to='company.Employee')),
            ],
        ),
    ]
